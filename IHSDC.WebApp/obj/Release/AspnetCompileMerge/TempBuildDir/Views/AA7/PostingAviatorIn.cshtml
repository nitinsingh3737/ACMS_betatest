@model IHSDC.WebApp.Models.PostingAviator
@using IHSDC.WebApp.Connection

@{
    ViewBag.Title = "Posting In";
    var message = TempData["Message"] ?? string.Empty;
    var messageStatus = TempData["messageStatus"] ?? string.Empty;
    var messagemidStatus = TempData["messagemidStatus"] ?? string.Empty;
    int sno = 0;
    Layout = "~/Views/Shared/_NewAA7LayoutMenu.cshtml";

}


<div class="card-body">

    @using (Html.BeginForm("PostingAviatorIn", "AA7", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="modal fade" id="SelfDeclaration">
            <div class="modal-dialog" style="margin-top:350px">
                <div class="modal-content">
                    <h4 style="text-align:center">Declaration</h4>
                    <p style="margin-left:10px;margin-right:10px;font-size:14px;font-family:Arial">I <b><u>@SessionManager.UserName</u></b> solemnly declare the information mentioned herein is true and correct to the best of my beliefs.</p>
                    <div class="modal-footer">
                        <input type="submit" class="btn btn-success" name="btnval" value="@ViewBag.Button" />
                        <a id="btnCancel" style="color:white;" class="btn btn-danger" data-dismiss="modal">Cancel</a>
                    </div>
                </div>
            </div>
        </div>

        <div id="contains">
            @if (SessionManager.IsPermission == 1 || SessionManager.IsPermission == 3 || SessionManager.IsPermission == 5)
            {

                <div class="rcorners">
                    <div class="row">

                        <div class="col-2">
                            <p class="mb-0">  Aviator Name</p>
                            @Html.HiddenFor(m => m.Aviator_ID)
                            @*change for any reqmt remove comment @Html.DropDownListFor(m => m.Aviator_ID, (new IHSDC.WebApp.Models.MasterModels()).LoadPostingAviatorName(), "--Select Aviator Name --", new { @data_show_subtext = "true", @class = "select form-control", @data_live_search = "true", @required = true })*@
                            @Html.TextBoxFor(m => m.AviatorName, new { @class = "form-control", @onkeyup = "ValInData(this)", @required = true, @readonly = true })
                        </div>
                        <div class="col-2">
                            <p class="mb-0"> Posting Auth</p>
                            @Html.TextBoxFor(m => m.PostingAuth, new { @class = "form-control", @onkeyup = "ValInData(this)", @required = true, @onkeypress = "return postingAuthValidation(event)" })
                        </div>

                        <div class="col-2">
                            <p class="mb-0"> TOS Date</p>
                            @Html.TextBoxFor(m => m.TOS, new { @class = "form-control datepicker3", @onkeyup = "ValInData(this)", @onchange = "isDate(this)", @placeholder = "dd/mm/yyyy", @required = true })
                        </div>


                        <div class="col-2">
                            <p class="mb-0"> TORS Date</p>
                            @Html.TextBoxFor(m => m.TORS, new { @class = "form-control datepicker3", @onkeyup = "ValInData(this)", @onchange = "isDate(this),check(this,'TOS','TOS Date')", @placeholder = "dd/mm/yyyy", @required = true })
                        </div>

                        <div class="col-2">
                            <p class="mb-0">  Posting Type</p>
                            @Html.DropDownListFor(m => m.PostingType, (new IHSDC.WebApp.Models.MasterModels()).LoadPostingType(), "--Select Posting Type --", new { @data_show_subtext = "true", @class = "select form-control", @data_live_search = "true", @required = true })
                            @*@Html.TextBoxFor(m => m.PostingType, new { @class = "form-control", @required = true, @readonly = true })*@
                        </div>
                        <div class="col-2 d-none">
                            <p class="mb-0">To Unit</p>
                            @Html.TextBoxFor(m => m.PostingToUnit, new { @class = "form-control", @onkeyup = "ValInData(this)", })
                        </div>


                    </div>

                    <div class="d-flex justify-content-center" style="margin-top:10px;padding-left:5px;">

                        @*<input type="submit" class="btn btn-success" name="btnval" value="@ViewBag.Button" />*@
                        <input type="button" data-toggle="modal" data-target="#SelfDeclaration" id="BtnDeclaration" class="btn btn-success" name="btnval" value="Save" />
                        &nbsp;&nbsp;&nbsp;
                        <a class="btn btn-info" href="@Url.Action("PostingAviatorOut","AA7")" target="_top">
                            Back
                        </a>

                    </div>


                </div>

            }


        </div>

        @Html.HiddenFor(m => m.AviatorPosting_ID)


    }




<div class="card-body" style="box-shadow: -1px 2px 16px 3px; padding: 0.3rem; border: 1px solid #89CFF0;">
    <div class="aj" style="padding: 0.5rem;">
        <div class="table-responsive">
            <table class="table table-striped" id="dataTable" width="100%" cellspacing="0">
                <thead class="bg-info text-white">
                    <tr>
                        <th class="center">S/No</th>
                        <th class="center" width="133px">Aviator Name</th>
                        <th class="center">Posting Auth</th>
                        <th class="center">Posting Fm Unit</th>
                        <th class="center">Posting To Unit</th>
                        <th class="center">TOS</th>
                        <th class="center">TORS</th>
                        <th class="center">Posting Type</th>

                        @*<th class="center">Status</th>*@
                        <th class="center" width="100px"> Action </th>
                    </tr>
                </thead>
                <tbody id="tbody">
                    @if (ViewBag.count > 0)
                    {
                        foreach (var item in Model.ILPostingAviator)
                        {
                            <tr>
                                <td>
                                    @{ sno++; }
                                    @sno
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.AviatorName)</td>
                                <td>@Html.DisplayFor(modelItem => item.PostingAuth)</td>
                                <td>@Html.DisplayFor(modelItem => item.PostingFromUnitName)</td>
                                <td>@Html.DisplayFor(modelItem => item.PostingToUnitName)</td>
                                <td>@Html.DisplayFor(modelItem => item.TOS)</td>
                                <td>@Html.DisplayFor(modelItem => item.TORS)</td>
                                <td>@Html.DisplayFor(modelItem => item.PostingType)</td>


                                <td>

                                    @if (item.TORS == null && item.TOS == null)
                                    {

                                        <a id="editdata" onclick="location.href='@Url.Action("PostingAviatorIn", "AA7", new { id = IHSDC.WebApp.RepositryManager.EncryptionManager.Encryption(item.AviatorPosting_ID.ToString()) })'">
                                            <img src="~/images/Editnew.png" width="20" height="20" border="0">
                                        </a>
                                    }

                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr><td colspan="12" style="font-weight:900;color:red;text-align:center"> No Record Found!!!</td></tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

        <script src="~/Scripts/jquery-3.3.1.js"></script>
        <script src="~/Content/CustomJS/DeleteConfirmation.js"></script>
        <script src="~/Content/CustomJS/AviatorJS.js"></script>
        <script src="~/Content/css/sweetalert.min.js"></script>
        <link href="~/Content/css/sweetalert.css" rel="stylesheet" />

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryui")
            @Styles.Render("~/Content/cssjqryUi")

            <script type="text/javascript">

      var message = '@message';
    var messageStatus = '@messageStatus';
    var messagemidStatus = '@messagemidStatus';
    if (message)
            sweetAlert(message, messagemidStatus, messageStatus);


   //     $('#TOS').datepicker({
			//uiLibrary: 'bootstrap4',
			//dateFormat: "dd/M/yy",
			//autoclose: true
   //     });



   //     $('#TORS').datepicker({
   //         uiLibrary: 'bootstrap4',
   //         dateFormat: "dd/M/yy",
   //         autoclose: true
   //     });



        function check(obj, compareField, comparemsg) {
          //  debugger;
            var a = $(obj).parent().children()[0]
            var text = $(a).text();
            var DateofIssueCatCard = $(obj).val();
            var DateOfWings = $('#' + compareField + '').val();
            if (DateOfWings > DateofIssueCatCard) {
                sweetAlert(' ' + text + ' can not be less then ' + comparemsg + ' !', 'Please Re-Enter ' + text + '', 'warning');
                $(obj).val('');
                $(obj).focus();
            }
        }



        function postingAuthValidation(event) {

            if ((event.which < 48 || event.which > 57) && event.which != 46) {
                if (event.which == 8 || event.which == 0 || event.which == 196 || event.which == 95 || event.which == 47 || event.which == 45 || event.which == 92) {
                    return true;

                }
                else if (((event.charCode > 64 && event.charCode < 91) || (event.charCode > 96 && event.charCode < 123) || event.charCode == 32)) {
                    return true;

                }
                else {
                    return false;
                }

            }
        }

            </script>
        }

