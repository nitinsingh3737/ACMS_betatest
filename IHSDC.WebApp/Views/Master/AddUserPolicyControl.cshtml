@model IHSDC.WebApp.Models.UserPolicyControlCRUD
@using IHSDC.WebApp.Helper
@using IHSDC.WebApp.Connection
@{

    var message = TempData["Message"] ?? string.Empty;
    var messageStatus = TempData["messageStatus"] ?? string.Empty;
    var messagemidStatus = TempData["messagemidStatus"] ?? string.Empty;

    ViewBag.Title = "Conf Type";
    Layout = "~/Views/Shared/_NewAA7Layout.cshtml"; int sno = 0;
}

@{
    string myValue = @ViewBag.ButtonName;
}
<style>
    .select2-selection__choice__remove {
        display: none !important;
    }
</style>


@using (Html.BeginForm("AddUserPolicyControl", "Master", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.UserPolicyControlId)

    @Html.Hidden("btnval", myValue)

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "danger" })

    <div class="card-body" style="box-shadow: -1px 2px 16px 3px;">
        <h3 style="text-align: center; box-shadow: 0px 1px 1px;">
            Policy Access Permission
        </h3>
        <div class="row">
            <div class="col" style="margin-left:1rem;">
                <label><b>User:</b></label>
                @Html.DropDownListFor(m => m.PUserId, (new IHSDC.WebApp.Models.MasterModels()).LoadAllUsers(), "--Select User --", new { @data_show_subtext = "true", @class = "select form-control dropdownsearch", @data_live_search = "true", @required = "required", @maxlength = "20" })
                @Html.ValidationMessageFor(model => model.PUserId, "", new { @class = "danger" })


                
            </div>
            <div class="col" style="margin-left:1rem;">
                <label><b>Policies:</b></label>
                @Html.TextBoxFor(m => m.Policies, new { style = "display:none;" })
                @*@Html.TextBoxFor(m => m.Policies)*@
                <div id="OrgId">
                    <select id="ddlPolicies" multiple="multiple" name="UserPolicies" style="width:500px;">
                        @if (Model.ILUserPolicyCRUD != null)
                        {
                            foreach (var item in Model.ILUserPolicyCRUD)
                            {
                                if (item.PolicyName != null)
                                {
                                    if (item.Msg == "Selected")
                                    {
                                      
                                        if (item.UpdatedByUserId == Convert.ToInt32(ViewBag.userintid))
                                        {
                                            <option value="@item.PolicyId" selected="selected">
                                                @item.PolicyName
                                            </option>
                                        }
                                        else if (SessionManager.RoleId == enum1.Administrator)
                                        {
                                            <option value="@item.PolicyId" selected="selected">
                                                @item.PolicyName
                                            </option>
                                        }
                                        else
                                        {
                                            <option class="optselected" value="@item.PolicyId" selected="selected">
                                                @item.PolicyName
                                            </option>
                                        }

                                    }
                                    else
                                    {
                                        if (item.UpdatedByUserId == Convert.ToInt32(ViewBag.userintid))
                                        {
                                            <option value="@item.PolicyId">
                                                @item.PolicyName
                                            </option>
                                        }
                                        else if (SessionManager.RoleId == enum1.Administrator)
                                        {
                                            <option value="@item.PolicyId">
                                                @item.PolicyName
                                            </option>
                                        }
                                        else
                                        {
                                            <option class="optselected" value="@item.PolicyId">
                                                @item.PolicyName
                                            </option>
                                        }
                                    }
                                }

                            }
                        }
                    </select>
                </div>
            </div>

            <div class="col-md-6">
                <button type="button" style="margin-top: 2.0rem;" value="@ViewBag.ButtonName" onclick="AddConfirmation(this,'/Master/AddUserPolicyControl','AddUserPolicyControl')" name="btnval" class="btn btn-success">@ViewBag.ButtonName</button>
            </div>
        </div>
        <div class="dropdown-divider"></div>


        <div class="table-responsive" style=" margin-left: 1rem; padding-right: 2rem;">
            <table class="table table-striped" id="dataTable" width="100%" cellspacing="0">
                <thead class="bg-info text-white">
                    <tr>
                        <th class="center">S/No</th>
                        <th class="center">UserName</th>
                        <th class="center">Policies</th>
                        <th class="center">Edit</th>
                    </tr>
                </thead>
                <tbody id="tbody">
                    @if (ViewBag.count > 0)
                    {
                        foreach (var item in Model.ILUserPolicyControlCRUD)
                        {
                            <tr>
                                <td>
                                    @{ sno++; }
                                    @sno
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                                <td>@Html.DisplayFor(modelItem => item.PolicyName)</td>
                                <td>
                                    @*<a onclick="location.href='@Url.Action("AddUserPolicyControl", "Master", new {   id = IHSDC.WebApp.RepositryManager.EncryptionManager.Encryption(item.UserPolicyControlId.ToString()) })'">*@
                                    <a href='@Url.Action("AddUserPolicyControl", "Master", new { id = IHSDC.WebApp.RepositryManager.EncryptionManager.Encryption(item.UserPolicyControlId.ToString()) })'>
                                        <img src="~/Content/images/Editnew.png" width="30" height="30" border="0">
                                    </a>
                                </td>
                            </tr>
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
}


<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Content/CustomJS/DeleteConfirmation.js"></script>
<script src="~/Content/css/sweetalert.min.js"></script>
<link href="~/Content/css/sweetalert.css" rel="stylesheet" />
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")


    <head runat="server">
        <script src="~/Scripts/bootstrap-multiselect.js"></script>
        <link href="~/Content/css/bootstrap-multiselect.css" rel="stylesheet" />
        <script type="text/javascript">
            $(document).ready(function () {

                $('.optselected').prop('disabled', true);
                $('#ddlPolicies').select2({
                    allowClear: false
                });
                $('.dropdownsearch').select2();
                function removeSelectedValue() {
                    $('#mySelect2').val(null).trigger('change');
                }
                $(".select2-search__field").on('keydown', function (e) {
                    if (e.which === 8 && !e.target.value.length) {
                        e.stopImmediatePropagation();
                        e.preventDefault();
                    }
                });
                $("#removeSelectedValueButton").click(function () {
                    removeSelectedValue();
                });
            });

            //$(function () {
            //    $('#ddlPolicies').multiselect({
            //        includeSelectAllOption: true,
            //        selectAllValue: 'multiselect-all',
            //        enableFiltering: true,
            //        enableCaseInsensitiveFiltering: true,
            //        maxHeight: '300',
            //        buttonWidth: '230',
            //    });
            //});

            $("#ddlPolicies").change(function () {
                var selected = $("#ddlPolicies option:selected");
                var Policy = "";
                var arrSelected = [];
                selected.each(function () {
                    arrSelected.push($(this).val());
                    Policy += $(this).val() + ",";
                });
                Policy = Policy.slice(0, -1);
                $('#Policies').val(Policy);
            });

        </script>
    </head>

    <script type="text/javascript">
            var messaget = '@ViewBag.ButtonName';



    function AddConfirmation(obj, ActionName, Submit) {
        event.preventDefault();

        // Remove any existing error labels
        $('.error-label').remove();

        // Check if all required form fields are filled in
        var emptyFields = [];
        $('form').find(':input[required]').each(function () {
            if ($.trim($(this).val()) === '') {
                emptyFields.push(this);
            }
        });

        // If there are empty fields, display an error message for the first empty field
        if (emptyFields.length > 0) {
            var firstEmptyField = emptyFields[0];
            $(firstEmptyField).after('<label class="error-label" style="color: red;">This field is required</label>');
            return;
        }

        // If all fields are filled, display the confirmation dialog
        if (messaget == "Add") {
            swal({
                title: "Please Confirm",
                text: "",
                type: "warning",

                showCancelButton: true,
                cancelButtonText: "Cancel",
                cancelButtonColor: "#FF0000",
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, Add",

                closeOnCancel: true,
                closeOnConfirm: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        $('form').submit();
                    }
                });
        } else {
            swal({
                title: "Please Confirm",
                text: "",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, Update",
                cancelButtonText: "Cancel",

                closeOnConfirm: false,
                closeOnCancel: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        $('form').submit();
                    }
                });
        }
    }


   var message = '@message';
    var messageStatus = '@messageStatus';
    var messagemidStatus = '@messagemidStatus ';
    if (message)
        sweetAlert(message, messagemidStatus, messageStatus);
    </script>

}