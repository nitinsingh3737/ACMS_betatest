@model IHSDC.WebApp.Models.RoleViewModel

@{
    ViewBag.Title = "Create";
}
<style>
    .ajs {
        background-color: #f2f2f2;
    }
</style>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card-body" style="box-shadow: -1px 2px 16px 3px; padding: 0.5rem;">
        <h2 class="ajs">@ViewBag.button Role</h2>

        @*<hr />*@
        <div class="row">
            <div class="col-md-3">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col" })
                    <div class="col">
                        @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control", @onkeyup = "ValInData(this)" } })
                        @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-3">

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col" })
                    <div class="col">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @onkeyup = "ValInData(this)" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger"})
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.IsPermission, htmlAttributes: new { @class = "control-label col" })
                    <div class="col">
                        @Html.DropDownListFor(model => model.IsPermission, (new IHSDC.WebApp.Models.MasterModels()).LoadPermission(), "--Select --", new { @data_show_subtext = "true", @class = "select form-control", @data_live_search = "true", @required = true })
                    </div>
                </div>
                <div> @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control d-none" } })</div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col">
                <input type="submit" value="@ViewBag.button" class="btn btn-success" />
                <span>
                    @Html.ActionLink("View Roles", "Index", new object { }, new { @class = "btn btn-primary" })
                </span>
            </div>
        </div>
    </div>
}
<script>
        function ValInData(input) {
            var regex = /[^a-zA-Z0-9 ]/g;
            input.value = input.value.replace(regex, "");
        }
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
